{"version":3,"file":"Calendar-Calendar-stories.09f3e132.iframe.bundle.js","mappings":";;;;;;;;;AAwDA","sources":["webpack://@elonkit/react/./src/components/Calendar/CalendarButton/CalendarButton.tsx"],"sourcesContent":["import { CalendarButtonProps } from './CalendarButton.types';\n\nimport clsx from 'clsx';\nimport { getCalendarButtonUtilityClass } from './CalendarButton.classes';\nimport { calendarButtonClasses } from './CalendarButton.classes';\n\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\n\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\nimport ButtonBase, { buttonBaseClasses, touchRippleClasses } from '@mui/material/ButtonBase';\nimport Tooltip, { tooltipClasses, TooltipProps } from '@mui/material/Tooltip';\nimport { capitalize } from '@mui/material/utils';\n\nconst enterKeyframe = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\ntype CalendarButtonOwnerState = {\n  classes?: CalendarButtonProps['classes'];\n\n  disabled?: boolean;\n  inactive?: boolean;\n\n  selected?: boolean;\n  hovered?: boolean;\n  today?: boolean;\n\n  position?: 'start' | 'end' | 'between';\n};\n\nconst useUtilityClasses = (ownerState: CalendarButtonOwnerState) => {\n  const { classes, inactive, selected, hovered, today, position } = ownerState;\n\n  const slots = {\n    root: ['root', selected && 'selected', hovered && 'hovered', position && `position${capitalize(position)}`],\n    wrapper: ['wrapper'],\n    button: [\n      'button',\n      inactive && 'buttonInactive',\n      selected && position !== 'between' && 'buttonSelected',\n      today && 'buttonToday'\n    ],\n    tooltip: ['tooltip']\n  };\n\n  return composeClasses(slots, getCalendarButtonUtilityClass, classes);\n};\n\nconst CalendarButtonRoot = styled('div', {\n  name: 'ESCalendarButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState: { selected, hovered, position }\n    } = props;\n\n    return [\n      styles.root,\n      selected && styles.selected,\n      hovered && styles.hovered,\n      position && styles[`position${capitalize(position)}`]\n    ];\n  }\n})(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '2px',\n  position: 'relative',\n\n  '&::before': {\n    border: `0 dashed ${theme.palette.monoA.A300}`,\n    content: '\"\"',\n    inset: 0,\n    position: 'absolute'\n  },\n\n  [`&.${calendarButtonClasses.hovered}`]: {\n    [`&.${calendarButtonClasses.positionStart}::before`]: {\n      borderBottomLeftRadius: '8px',\n      borderBottomWidth: '1px',\n      borderLeftWidth: '1px',\n      borderTopLeftRadius: '8px',\n      borderTopWidth: '1px'\n    },\n\n    [`&.${calendarButtonClasses.positionBetween}::before`]: {\n      borderBottomWidth: '1px',\n      borderTopWidth: '1px'\n    },\n\n    [`&.${calendarButtonClasses.positionEnd}::before`]: {\n      borderBottomRightRadius: '8px',\n      borderBottomWidth: '1px',\n      borderRightWidth: '1px',\n      borderTopRightRadius: '8px',\n      borderTopWidth: '1px'\n    }\n  },\n\n  '&:nth-child(7n), &:last-of-type': {\n    [`&.${calendarButtonClasses.hovered}::before`]: {\n      borderBottomRightRadius: '8px',\n      borderRightWidth: '1px',\n      borderTopRightRadius: '8px'\n    },\n\n    [`& .${calendarButtonClasses.wrapper}`]: {\n      borderBottomRightRadius: '6px',\n      borderTopRightRadius: '6px',\n\n      '&::after': {\n        display: 'none'\n      }\n    }\n  },\n\n  '&:nth-child(7n + 1), &:first-of-type': {\n    [`&.${calendarButtonClasses.hovered}::before`]: {\n      borderBottomLeftRadius: '8px',\n      borderLeftWidth: '1px',\n      borderTopLeftRadius: '8px'\n    },\n\n    [`& .${calendarButtonClasses.wrapper}`]: {\n      borderBottomLeftRadius: '6px',\n      borderTopLeftRadius: '6px',\n\n      '&::before': {\n        display: 'none'\n      }\n    }\n  },\n\n  [`&.${calendarButtonClasses.selected}.${calendarButtonClasses.positionBetween} .${calendarButtonClasses.wrapper}`]: {\n    background: theme.palette.secondary.A200,\n\n    '&::before, &::after': {\n      content: '\"\"'\n    }\n  },\n\n  [`&.${calendarButtonClasses.selected}.${calendarButtonClasses.positionStart}:not(:nth-last-child(1 of .${calendarButtonClasses.selected})) .${calendarButtonClasses.wrapper}`]:\n    {\n      background: `linear-gradient(to right, transparent 50% , ${theme.palette.secondary.A200} 50%)`,\n      borderBottomLeftRadius: '6px',\n      borderTopLeftRadius: '6px',\n\n      '&::after': {\n        content: '\"\"'\n      }\n    },\n\n  [`&.${calendarButtonClasses.selected}.${calendarButtonClasses.positionEnd}:not(:nth-child(1 of .${calendarButtonClasses.selected})) .${calendarButtonClasses.wrapper}`]:\n    {\n      background: `linear-gradient(to left, transparent 50% , ${theme.palette.secondary.A200} 50%)`,\n      borderBottomRightRadius: '6px',\n      borderTopRightRadius: '6px',\n\n      '&::before': {\n        content: '\"\"'\n      }\n    }\n}));\n\nconst CalendarButtonWrapper = styled('div', {\n  name: 'ESCalendarButton',\n  slot: 'Wrapper',\n  overridesResolver: (_props, styles) => styles.wrapper\n})(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  height: '36px',\n  justifyContent: 'center',\n  position: 'relative',\n  width: '100%',\n\n  '&::before, &::after': {\n    background: theme.palette.secondary.A200,\n    bottom: 0,\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    width: '2px'\n  },\n\n  '&::before': {\n    left: '-2px'\n  },\n\n  '&::after': {\n    right: '-2px'\n  }\n}));\n\nconst CalendarButtonButton = styled(ButtonBase, {\n  name: 'ESCalendarButton',\n  slot: 'Button',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState: { inactive, selected, today, position }\n    } = props;\n\n    return [\n      styles.button,\n      inactive && styles.buttonInactive,\n      selected && position !== 'between' && styles.buttonSelected,\n      today && styles.buttonToday\n    ];\n  }\n})<{ ownerState: CalendarButtonOwnerState }>(({ theme }) => ({\n  [`&.${buttonBaseClasses.root}`]: {\n    ...theme.typography.body100,\n    alignItems: 'center',\n    borderRadius: '6px',\n    display: 'flex',\n    fontFamily: 'inherit',\n    height: '36px',\n    justifyContent: 'center',\n    width: '100%',\n\n    [`&.${calendarButtonClasses.buttonToday}`]: {\n      ...theme.typography.body100Bold,\n      border: `1px solid ${theme.palette.monoA.A400}`\n    },\n\n    [`&.${calendarButtonClasses.button}`]: {\n      [`& .${touchRippleClasses.root}`]: {\n        transitionDuration: `${theme.transitions.duration.short}ms`\n      }\n    },\n\n    [`& .${touchRippleClasses.rippleVisible}`]: {\n      animationName: `${enterKeyframe} !important`,\n      opacity: '1 !important'\n    },\n\n    ...theme.mixins.button({\n      background: 'transparent',\n      color: theme.palette.monoA.A900,\n      hover: theme.palette.monoA.A50,\n      focus: theme.palette.monoA.A200,\n      active: theme.palette.monoA.A150\n    }),\n\n    [`&.${buttonBaseClasses.root}.${calendarButtonClasses.buttonInactive}`]: {\n      color: theme.palette.monoA.A550\n    },\n\n    [`&.${calendarButtonClasses.buttonSelected}`]: {\n      ...theme.mixins.button({\n        background: theme.palette.secondary[300],\n        color: theme.palette.monoA.A900,\n        hover: theme.palette.monoA.A50,\n        focus: theme.palette.monoA.A200,\n        active: theme.palette.monoA.A150\n      })\n    },\n\n    [`&.${buttonBaseClasses.root}.${buttonBaseClasses.disabled}`]: {\n      color: theme.palette.monoA.A400,\n      cursor: 'not-allowed',\n      pointerEvents: 'auto'\n    }\n  }\n}));\n\nconst CalendarButtonTooltip = styled(\n  ({ className, ...props }: TooltipProps) => <Tooltip {...props} classes={{ popper: className }} />,\n  {\n    name: 'ESCalendarButton',\n    slot: 'Tooltip',\n    overridesResolver: (_props, styles) => styles.tooltip\n  }\n)(() => ({\n  [`&[data-popper-placement*=\"top\"] .${tooltipClasses.tooltip}`]: {\n    marginBottom: '12px !important'\n  }\n}));\n\nexport const CalendarButton = (inProps: CalendarButtonProps) => {\n  const {\n    children,\n    className,\n    sx,\n    disabled,\n    inactive,\n    selected,\n    hovered,\n    today,\n    position,\n    onClick,\n    onHover,\n    TooltipProps,\n    ...props\n  } = useThemeProps({\n    props: inProps,\n    name: 'ESCalendarButton'\n  });\n\n  const ownerState = { today, disabled, inactive, selected, hovered, position, ...props };\n  const classes = useUtilityClasses(ownerState);\n\n  return (\n    <CalendarButtonRoot\n      className={clsx(className, classes.root)}\n      sx={sx}\n      onClick={onClick}\n      onFocus={onHover}\n      onMouseEnter={onHover}\n    >\n      <CalendarButtonWrapper className={classes.wrapper}>\n        <CalendarButtonTooltip\n          disableInteractive\n          className={clsx(classes.tooltip)}\n          placement=\"top\"\n          {...TooltipProps}\n          TransitionProps={{ timeout: 0, ...TooltipProps?.TransitionProps }}\n          title={TooltipProps?.title || ''}\n        >\n          <div style={{ width: '100%' }}>\n            <CalendarButtonButton className={classes.button} disabled={disabled} ownerState={ownerState}>\n              {children}\n            </CalendarButtonButton>\n          </div>\n        </CalendarButtonTooltip>\n      </CalendarButtonWrapper>\n    </CalendarButtonRoot>\n  );\n};\n"],"names":[],"sourceRoot":""}
"use strict";(self.webpackChunk_elonkit_react=self.webpackChunk_elonkit_react||[]).push([[3771],{"./src/components/SvgIcon/SvgIcon.classes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>svgIconClasses,h:()=>getSvgIconUtilityClass});var _mui_base__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js");function getSvgIconUtilityClass(slot){return(0,_mui_base__WEBPACK_IMPORTED_MODULE_0__.Z)("ESSvgIcon",slot)}const svgIconClasses=(0,__webpack_require__("./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js").Z)("ESSvgIcon",["root","svg"])},"./src/components/SvgIcon/SvgIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>SvgIcon});var clsx__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),_SvgIcon_classes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/SvgIcon/SvgIcon.classes.ts"),_mui_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/base/composeClasses/composeClasses.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SvgIconRoot=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div",{name:"ESSvgIcon",slot:"Root",overridesResolver:(props,styles)=>styles.root})((()=>({userSelect:"none",display:"inline-flex",flexShrink:0,alignItems:"center",justifyContent:"center",overflow:"hidden"}))),SvgIconSvg=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("svg",{name:"ESSvgIcon",slot:"Svg",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.svg,!ownerState.container&&styles.root]}})((()=>({userSelect:"none",display:"inline-flex",fill:"none",flexShrink:0}))),SvgIcon=inProps=>{const{children,className,classes:inClasses,sx,size,width,height,container,containerSize,containerWidth,containerHeight,title,ContainerProps,...props}=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__.Z)({props:inProps,name:"ESSvgIcon"}),classes=(ownerState=>{const{classes}=ownerState;return(0,_mui_base__WEBPACK_IMPORTED_MODULE_1__.Z)({root:["root"],svg:["svg"]},_SvgIcon_classes__WEBPACK_IMPORTED_MODULE_2__.h,classes)})({classes:inClasses,container}),svg=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(SvgIconSvg,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_5__.Z)(classes.svg,!container&&[classes.root,className]),focusable:"false",sx:container?void 0:sx,...props,style:{width:width||size,height:height||size,...props.style},children:[children,title?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title",{children:title}):null]});return container?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgIconRoot,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_5__.Z)(classes.root,className),sx,...ContainerProps,style:{width:containerWidth||containerSize||width||size,height:containerHeight||containerSize||height||size,...ContainerProps?.style},children:svg}):svg};SvgIcon.__docgenInfo={description:"Wrapper component for the svg icons.",methods:[],displayName:"SvgIcon",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/components/Swiper/Swiper.context.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>SwiperContext,m:()=>useSwiperContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const SwiperContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null),useSwiperContext=()=>{const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SwiperContext);if(null===value)throw new Error("No provider for SwiperContext.");return value}},"./src/components/Swiper/Swiper.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>Swiper});var react=__webpack_require__("../../node_modules/react/index.js"),clsx_m=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js"),generateUtilityClasses=__webpack_require__("./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js");function getSwiperUtilityClass(slot){return(0,generateUtilityClass.Z)("ESSwiper",slot)}const swiperClasses=(0,generateUtilityClasses.Z)("ESSwiper",["root","horizontal","vertical","wrapper","container","containerSnap","containerSnapAlignCenter","containerSnapAlignStart","button","buttonPrev","buttonNext"]);var composeClasses=__webpack_require__("./node_modules/@mui/base/composeClasses/composeClasses.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),iconButtonClasses=__webpack_require__("./node_modules/@mui/material/IconButton/iconButtonClasses.js"),Swiper_context=__webpack_require__("./src/components/Swiper/Swiper.context.ts");function getSwiperButtonUtilityClass(slot){return(0,generateUtilityClass.Z)("ESSwiperButton",slot)}(0,generateUtilityClasses.Z)("ESSwiperButton",["root","prev","next","horizontal","vertical"]);var IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),IconArrowUpW500=__webpack_require__("./src/icons/IconArrowUpW500.tsx"),IconArrowDownW500=__webpack_require__("./src/icons/IconArrowDownW500.tsx"),IconArrowLeftW500=__webpack_require__("./src/icons/IconArrowLeftW500.tsx"),IconArrowRightW500=__webpack_require__("./src/icons/IconArrowRightW500.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SwiperButtonRoot=(0,styled.ZP)(IconButton.Z,{name:"ESSwiperButton",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState:{step,direction}}=props;return[styles.root,step<0&&styles.prev,step>0&&styles.next,styles[direction]]}})((({theme,ownerState})=>({position:"absolute",..."horizontal"===ownerState.direction&&{top:"50%",transform:"translateY(-50%)",...ownerState.step<0&&{left:"16px"},...ownerState.step>0&&{right:"16px"}},..."vertical"===ownerState.direction&&{left:"50%",transform:"translateX(-50%)",...ownerState.step<0&&{top:"16px"},...ownerState.step>0&&{bottom:"16px"}},[`&.${iconButtonClasses.Z.root}.${iconButtonClasses.Z.root}`]:{backdropFilter:"blur(10px)",borderRadius:4,padding:8,...theme.mixins.button({background:theme.palette.black.A600,color:theme.palette.white[500],hover:theme.palette.white.A50,focus:theme.palette.white.A200,active:theme.palette.white.A150})}}))),SwiperButton=inProps=>{const{className,sx,step,labelPrev,labelNext,iconUp=(0,jsx_runtime.jsx)(IconArrowUpW500.Q,{}),iconDown=(0,jsx_runtime.jsx)(IconArrowDownW500.U,{}),iconLeft=(0,jsx_runtime.jsx)(IconArrowLeftW500.k,{}),iconRight=(0,jsx_runtime.jsx)(IconArrowRightW500.o,{}),...props}=(0,useThemeProps.Z)({props:inProps,name:"ESSwiperButton"}),{direction,setActiveSlideByStep}=(0,Swiper_context.m)(),ownerState={...props,step,direction},classes=(ownerState=>{const{classes,step,direction}=ownerState,slots={root:["root",step<0&&"prev",step>0&&"next",direction]};return(0,composeClasses.Z)(slots,getSwiperButtonUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(SwiperButtonRoot,{"aria-label":step<0?labelPrev:labelNext,className:(0,clsx_m.Z)(classes.root,className),ownerState,sx,onClick:()=>{setActiveSlideByStep(step)},children:"vertical"===direction?step<0?iconUp:iconDown:step<0?iconLeft:iconRight})};SwiperButton.__docgenInfo={description:"",methods:[],displayName:"SwiperButton",props:{className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the root element if step < 0. */\n  prev: string;\n  /** Styles applied to the root element if step > 0. */\n  next: string;\n  /** Styles applied to the root element if Swiper's direction is 'horizontal'. */\n  horizontal: string;\n  /** Styles applied to the root element if Swiper's direction is 'vertical'. */\n  vertical: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"prev",value:{name:"string",required:!0},description:"Styles applied to the root element if step < 0."},{key:"next",value:{name:"string",required:!0},description:"Styles applied to the root element if step > 0."},{key:"horizontal",value:{name:"string",required:!0},description:"Styles applied to the root element if Swiper's direction is 'horizontal'."},{key:"vertical",value:{name:"string",required:!0},description:"Styles applied to the root element if Swiper's direction is 'vertical'."}]}}],raw:"Partial<SwiperButtonClasses>"},description:"Override or extend the styles applied to the component."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},step:{required:!0,tsType:{name:"number"},description:"Count of slides to scroll when pressing a button.\n@default 1"},labelPrev:{required:!1,tsType:{name:"string"},description:"Text for the prev button aria-label."},labelNext:{required:!1,tsType:{name:"string"},description:"Text for the prev button aria-label."},iconUp:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Icon for prev button if Swiper's direction is 'vertical'."},iconDown:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Icon for next button in Swiper's direction is 'vertical'."},iconLeft:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Icon for prev button in Swiper's direction is 'horizontal'."},iconRight:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Icon for next button in Swiper's direction is 'horizontal'."}}};var useLatest=__webpack_require__("./src/hooks/useLatest/useLatest.ts"),useDocumentEventListener=__webpack_require__("./src/hooks/useDocumentEventListener/useDocumentEventListener.ts"),useResizeObserver=__webpack_require__("./src/hooks/useResizeObserver/useResizeObserver.ts");const SwiperRoot=(0,styled.ZP)("div",{name:"ESSwiper",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState:{direction}}=props;return[styles.root,styles[direction]]}})((({ownerState})=>({position:"relative",display:"flex",..."horizontal"===ownerState.direction&&{flexDirection:"column",[`& .${swiperClasses.container}`]:{gridAutoFlow:"column"}},..."vertical"===ownerState.direction&&{flexDirection:"row",height:"100%",width:"max-content",[`& .${swiperClasses.container}`]:{gridAutoFlow:"row",height:"100%"},[`& .${swiperClasses.button}.${iconButtonClasses.Z.root}`]:{position:"absolute",left:"50%",transform:"translateX(-50%)"}}}))),SwiperWrapper=(0,styled.ZP)("div",{name:"ESSwiper",slot:"Wrapper",overridesResolver:(_props,styles)=>styles.wrapper})((()=>({position:"relative"}))),SwiperContainer=(0,styled.ZP)("div",{name:"ESSwiper",slot:"Container",overridesResolver:(props,styles)=>{const{ownerState:{snap,alignment}}=props;return[styles.container,snap&&styles.containerSnap,snap&&"center"===alignment&&styles.containerSnapAlignCenter,snap&&"start"===alignment&&styles.containerSnapAlignStart]}})((({ownerState})=>({display:"grid",justifyContent:"flex-start",msOverflowStyle:"none",overflow:"scroll",outline:"none",scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"},"& > *":{scrollSnapAlign:ownerState.alignment,...ownerState.snap&&{"&:first-child":{scrollSnapAlign:"start"},"&:last-child":{scrollSnapAlign:"end"}}},scrollSnapType:ownerState.snap?"x mandatory":"none"}))),Swiper=inProps=>{const{children,ref,className,sx,direction="horizontal",alignment="center",gap=16,snap,draggable,loop,autoPlay,autoPlayCount=1,actions,onActiveSlideChange,onPaginationRangeChange,buttonPrev=(0,jsx_runtime.jsx)(SwiperButton,{step:-1}),buttonNext=(0,jsx_runtime.jsx)(SwiperButton,{step:1}),pagination,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESSwiper"}),mapping=(direction=>(0,react.useMemo)((()=>"horizontal"===direction?{scrollSize:"scrollWidth",clientSize:"clientWidth",scrollPosition:"scrollLeft",offset:"offsetLeft",start:"left",end:"right",movement:"movementX"}:{scrollSize:"scrollHeight",clientSize:"clientHeight",scrollPosition:"scrollTop",offset:"offsetTop",start:"top",end:"bottom",movement:"movementY"}),[direction]))(direction),container=(0,react.useRef)(null),[active,setActive]=(0,react.useState)(-1),[from,setFrom]=(0,react.useState)(0),[to,setTo]=(0,react.useState)(0),[isPrevVisible,setPrevVisible]=(0,react.useState)(!1),[isNextVisible,setNextVisible]=(0,react.useState)(!1),[isMouseDown,setMouseDown]=(0,react.useState)(!1),[isMouseOver,setMouseOver]=(0,react.useState)(!1),[isTouchDown,setTouchDown]=(0,react.useState)(!1),[isSnapDisabled,setSnapDisabled]=(0,react.useState)(!1),getActiveSlide=()=>{let active=null;if(container.current){const rect=container.current.getBoundingClientRect(),center=(rect[mapping.start]+rect[mapping.end])/2,children=container.current.children;for(let i=0;i<children.length;i++){const childRect=children[i].getBoundingClientRect(),start=childRect[mapping.start],end=childRect[mapping.end];if(start-gap/2<center&&end+gap/2>center){active=i;break}}}return active},setActiveSlide=(0,react.useCallback)(((index,options)=>{if(container.current){const children=container.current.children[Math.max(0,Math.min(index,container.current.children.length-1))];if(children){const start=children[mapping.offset]-container.current[mapping.clientSize]/2+children[mapping.clientSize]/2;container.current.scrollTo({[mapping.start]:start,behavior:options?.smooth??1?"smooth":"auto"})}}}),[container,mapping]),getStep=(direction,count=1)=>{if(container.current){let step=0;const containerRect=container.current.getBoundingClientRect(),start=containerRect[mapping.start],end=containerRect[mapping.end],children=container.current.children;if("center"===alignment){const active=getActiveSlide();if(null!==active){const center=(start+end)/2;for(let i=active;count>=1&&(-1===direction?i>=0:i<children.length);i+=direction){const child=children[i],childNext=children[i+direction];if(i===active){const rect=child.getBoundingClientRect();step+=-1===direction?center-rect[mapping.start]:rect[mapping.end]-center}else step+=child[mapping.clientSize]/2;childNext&&(step+=childNext[mapping.clientSize]/2+gap),count--}}}else{const BUFFER=8;if(1===direction)for(let i=0;i<children.length;i++){const rect=children[i].getBoundingClientRect();if(rect[mapping.end]-start>BUFFER){if(step=rect[mapping.end]-start+gap,1===count)break;count--}}else for(let i=children.length-1;i>=0;i--){const rect=children[i].getBoundingClientRect();if(rect[mapping.start]-start<-BUFFER){if(step=-(rect[mapping.start]-start+gap),1===count)break;count--}}}return step}return 0},getPaginationRange=()=>{if(container.current){const children=container.current.children,start=container.current.getBoundingClientRect()[mapping.start],scrollPosition=container.current[mapping.scrollPosition],scrollSize=container.current[mapping.scrollSize],center=container.current[mapping.clientSize]/2;let newFrom=0,newTo=children.length-1;for(;children[newFrom]&&children[newFrom].getBoundingClientRect()[mapping.end]-start+scrollPosition+gap/2<=center;)newFrom++;for(;children[newTo]&&scrollSize-(children[newTo].getBoundingClientRect()[mapping.start]-start+scrollPosition)+gap/2<=center;)newTo--;newFrom!==from&&setFrom(newFrom),newTo!==to&&setTo(newTo)}},latestGetStep=(0,useLatest.d)(getStep),setActiveSlideByStep=(0,react.useCallback)(((step,options)=>{if(container.current){if(active===to&&step>0&&loop)return void container.current.scrollTo({[mapping.start]:0,behavior:"smooth"});if(active===from&&step<0&&loop)return void container.current.scrollTo({[mapping.start]:container.current[mapping.scrollSize],behavior:"smooth"});const s=latestGetStep.current(Math.sign(step),Math.abs(step));container.current.scrollBy({[mapping.start]:Math.sign(step)*s,behavior:options?.smooth??1?"smooth":"auto"})}}),[container,mapping,latestGetStep,active,from,to]),snapEnableTimeout=(0,react.useRef)(null),onMouseUp=()=>{if(isMouseDown&&(setMouseDown(!1),snapEnableTimeout.current=setTimeout((()=>{setSnapDisabled(!1)}),500),snap)){const index=getActiveSlide();null!==index&&setActiveSlide(index,{smooth:!0})}},onScroll=()=>{const newActive=getActiveSlide();container.current&&(container.current[mapping.scrollPosition]<=0&&!loop?setPrevVisible(!1):setPrevVisible(!0),container.current[mapping.clientSize]+container.current[mapping.scrollPosition]>=container.current[mapping.scrollSize]-1&&!loop?setNextVisible(!1):setNextVisible(!0)),null!==newActive&&newActive!==active&&(setActive(newActive),onActiveSlideChange&&onActiveSlideChange(newActive))};(0,react.useImperativeHandle)(actions,(()=>({setActiveSlide,setActiveSlideByStep})),[container.current]),(0,react.useEffect)((()=>{onScroll(),getPaginationRange()}),[react.Children.toArray(children).filter(Boolean).length]),(0,useDocumentEventListener.V)("touchend",(()=>{setTouchDown(!1)})),(0,useResizeObserver.y)(container,(()=>{onScroll(),getPaginationRange(),setTimeout((()=>{container.current&&container.current.scrollBy({[mapping.start]:0,behavior:"smooth"})}))})),(0,react.useEffect)((()=>{onPaginationRangeChange&&onPaginationRangeChange(from,to)}),[from,to]),(0,react.useEffect)((()=>{if(autoPlay&&autoPlay>0&&!isMouseDown&&!isMouseOver&&!isTouchDown){const interval=setInterval((()=>{if(container.current)if(container.current[mapping.clientSize]+container.current[mapping.scrollPosition]>=container.current[mapping.scrollSize]-1)container.current.scrollTo({[mapping.start]:0,behavior:"smooth"});else{const step=getStep(1,autoPlayCount);container.current.scrollBy({[mapping.start]:step,behavior:"smooth"})}}),autoPlay);return()=>{clearInterval(interval)}}}),[autoPlay,autoPlayCount,isMouseDown,isMouseOver,isTouchDown,direction,alignment]);const ownerState={...props,alignment,direction,snap:!(!snap||isSnapDisabled)},classes=(ownerState=>{const{classes,alignment,direction,snap}=ownerState,slots={root:["root",direction],wrapper:["wrapper"],container:["container",snap&&"containerSnap",snap&&"center"===alignment&&"containerSnapAlignCenter",snap&&"start"===alignment&&"containerSnapAlignStart"],button:["button"],buttonPrev:["buttonPrev"],buttonNext:["buttonNext"]};return(0,composeClasses.Z)(slots,getSwiperUtilityClass,classes)})(ownerState),value=(0,react.useMemo)((()=>({direction,active,from,to,setActiveSlide,setActiveSlideByStep})),[direction,active,from,to,setActiveSlide,setActiveSlideByStep]);return(0,jsx_runtime.jsx)(Swiper_context.O.Provider,{value,children:(0,jsx_runtime.jsxs)(SwiperRoot,{ref,"aria-roledescription":"carousel",className:(0,clsx_m.Z)(classes.root,className),ownerState,role:"group",sx,children:[(0,jsx_runtime.jsxs)(SwiperWrapper,{className:classes.wrapper,onMouseEnter:()=>{setMouseOver(!0)},onMouseLeave:()=>{setMouseOver(!1),onMouseUp()},children:[isPrevVisible&&!!buttonPrev&&buttonPrev,isNextVisible&&!!buttonNext&&buttonNext,(0,jsx_runtime.jsx)(SwiperContainer,{ref:container,className:classes.container,ownerState,style:{gap:`${gap}px`,cursor:draggable?isMouseDown?"grabbing":"grab":"unset"},tabIndex:-1,onDragStart:event=>(event.preventDefault(),!1),onMouseDown:()=>{setMouseDown(!0),setSnapDisabled(!0),snapEnableTimeout.current&&(clearTimeout(snapEnableTimeout.current),snapEnableTimeout.current=null)},onMouseLeave:onMouseUp,onMouseMove:event=>{draggable&&isMouseDown&&container.current&&(container.current[mapping.scrollPosition]-=event[mapping.movement])},onMouseUp,onScroll,onTouchStart:()=>{setTouchDown(!0)},children})]}),!!pagination&&pagination]})})};Swiper.__docgenInfo={description:"`Swiper` is a component for cycling through elements - images or slides of text - like a carousel.",methods:[],displayName:"Swiper",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},ref:{required:!1,tsType:{name:"Ref",elements:[{name:"HTMLDivElement"}],raw:"Ref<HTMLDivElement>"},description:""},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the button element if direction='horizontal'. */\n  horizontal: string;\n  /** Styles applied to the button element if direction='vertical'. */\n  vertical: string;\n  /** Styles applied to the wrapper element. */\n  wrapper: string;\n  /** Styles applied to the container element. */\n  container: string;\n  /** Styles applied to the container element if snap='true'. */\n  containerSnap: string;\n  /** Styles applied to the container element if snap=true and alignment='center'. */\n  containerSnapAlignCenter: string;\n  /** Styles applied to the container element if snap=true and alignment='start'. */\n  containerSnapAlignStart: string;\n  /** Styles applied to the button element. */\n  button: string;\n  /** Styles applied to the prev button element. */\n  buttonPrev: string;\n  /** Styles applied to the next button element. */\n  buttonNext: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"horizontal",value:{name:"string",required:!0},description:"Styles applied to the button element if direction='horizontal'."},{key:"vertical",value:{name:"string",required:!0},description:"Styles applied to the button element if direction='vertical'."},{key:"wrapper",value:{name:"string",required:!0},description:"Styles applied to the wrapper element."},{key:"container",value:{name:"string",required:!0},description:"Styles applied to the container element."},{key:"containerSnap",value:{name:"string",required:!0},description:"Styles applied to the container element if snap='true'."},{key:"containerSnapAlignCenter",value:{name:"string",required:!0},description:"Styles applied to the container element if snap=true and alignment='center'."},{key:"containerSnapAlignStart",value:{name:"string",required:!0},description:"Styles applied to the container element if snap=true and alignment='start'."},{key:"button",value:{name:"string",required:!0},description:"Styles applied to the button element."},{key:"buttonPrev",value:{name:"string",required:!0},description:"Styles applied to the prev button element."},{key:"buttonNext",value:{name:"string",required:!0},description:"Styles applied to the next button element."}]}}],raw:"Partial<SwiperClasses>"},description:"Override or extend the styles applied to the component."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},direction:{required:!1,tsType:{name:"union",raw:"'horizontal' | 'vertical'",elements:[{name:"literal",value:"'horizontal'"},{name:"literal",value:"'vertical'"}]},description:"The swiper direction.\n@default 'horizontal'"},alignment:{required:!1,tsType:{name:"union",raw:"'center' | 'start'",elements:[{name:"literal",value:"'center'"},{name:"literal",value:"'start'"}]},description:"Alignment of the slides.\n@default 'center'"},gap:{required:!1,tsType:{name:"number"},description:"The gap between slides.\n@default 16"},snap:{required:!1,tsType:{name:"boolean"},description:"Whether CSS Scroll Snap is enabled."},draggable:{required:!1,tsType:{name:"boolean"},description:"Whether the swiper can be scrolled by mouse drag. Not working well with snap mode."},loop:{required:!1,tsType:{name:"boolean"},description:"Whether the swiper will be reset into beginning if there are no more slides."},autoPlay:{required:!1,tsType:{name:"number"},description:"Whether the auto play mode is enabled and the interval between slides change."},autoPlayCount:{required:!1,tsType:{name:"number"},description:"Slides count to be auto played.\n@default 1"},actions:{required:!1,tsType:{name:"Ref",elements:[{name:"SwiperImperativeActions"}],raw:"Ref<SwiperImperativeActions>"},description:"A ref for imperative actions."},onActiveSlideChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(index: number) => void",signature:{arguments:[{type:{name:"number"},name:"index"}],return:{name:"void"}}},description:"Callback fired when active slide (closest to the center) changes."},onPaginationRangeChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(from: number, to: number) => void",signature:{arguments:[{type:{name:"number"},name:"from"},{type:{name:"number"},name:"to"}],return:{name:"void"}}},description:"Callback fired when pagination range changes."},buttonPrev:{required:!1,tsType:{name:"union",raw:"React.ReactNode | null",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"null"}]},description:"The component used for the prev button."},buttonNext:{required:!1,tsType:{name:"union",raw:"React.ReactNode | null",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"null"}]},description:"The component used for the next button."},pagination:{required:!1,tsType:{name:"union",raw:"React.ReactNode | null",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"null"}]},description:"The component used for the pagination."}}}},"./src/hooks/useDocumentEventListener/useDocumentEventListener.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{V:()=>useDocumentEventListener});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_useLatest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useLatest/useLatest.ts");const useDocumentEventListener=(type,callback,options)=>{const latestCallback=(0,_useLatest__WEBPACK_IMPORTED_MODULE_1__.d)(callback);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const onEvent=event=>latestCallback.current(event);return document.addEventListener(type,onEvent,options),()=>{document.removeEventListener(type,onEvent)}}),[])}},"./src/hooks/useResizeObserver/useResizeObserver.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>useResizeObserver});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_useLatest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useLatest/useLatest.ts");const useResizeObserver=(element,callback,options)=>{const latestCallback=(0,_useLatest__WEBPACK_IMPORTED_MODULE_1__.d)(callback);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(element.current){const resizeObserver=new ResizeObserver((entries=>{latestCallback.current(entries)}));return resizeObserver.observe(element.current,options),()=>{resizeObserver.disconnect()}}}),[element.current])}},"./src/icons/IconArrowLeftW500.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>IconArrowLeftW500});var _components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/SvgIcon/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconArrowLeftW500=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.l,{size:"24px",viewBox:"0 0 24 24",...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M20.0002 11.0001V13.0001H8.00016L13.5002 18.5001L12.0802 19.9201L4.16016 12.0001L12.0802 4.08008L13.5002 5.50008L8.00016 11.0001H20.0002Z",fill:"currentColor"})});IconArrowLeftW500.__docgenInfo={description:"",methods:[],displayName:"IconArrowLeftW500",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/icons/IconChevronLeftW400.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>IconChevronLeftW400});var _components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/SvgIcon/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconChevronLeftW400=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.l,{size:"24px",viewBox:"0 0 24 24",...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M15.41 16.58L10.83 12L15.41 7.41L14 6L8 12L14 18L15.41 16.58Z",fill:"currentColor"})});IconChevronLeftW400.__docgenInfo={description:"",methods:[],displayName:"IconChevronLeftW400",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/icons/IconChevronRightW400.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>IconChevronRightW400});var _components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/SvgIcon/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconChevronRightW400=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.l,{size:"24px",viewBox:"0 0 24 24",...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M8.58984 16.58L13.1698 12L8.58984 7.41L9.99984 6L15.9998 12L9.99984 18L8.58984 16.58Z",fill:"currentColor"})});IconChevronRightW400.__docgenInfo={description:"",methods:[],displayName:"IconChevronRightW400",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}}}]);
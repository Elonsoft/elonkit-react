"use strict";(self.webpackChunk_elonkit_react=self.webpackChunk_elonkit_react||[]).push([[9508],{"./src/components/SvgIcon/SvgIcon.classes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>svgIconClasses,h:()=>getSvgIconUtilityClass});var _mui_base__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js");function getSvgIconUtilityClass(slot){return(0,_mui_base__WEBPACK_IMPORTED_MODULE_0__.Z)("ESSvgIcon",slot)}const svgIconClasses=(0,__webpack_require__("./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js").Z)("ESSvgIcon",["root","svg"])},"./src/components/SvgIcon/SvgIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>SvgIcon});var clsx__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),_SvgIcon_classes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/SvgIcon/SvgIcon.classes.ts"),_mui_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/base/composeClasses/composeClasses.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SvgIconRoot=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div",{name:"ESSvgIcon",slot:"Root",overridesResolver:(props,styles)=>styles.root})((()=>({userSelect:"none",display:"inline-flex",flexShrink:0,alignItems:"center",justifyContent:"center",overflow:"hidden"}))),SvgIconSvg=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("svg",{name:"ESSvgIcon",slot:"Svg",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.svg,!ownerState.container&&styles.root]}})((()=>({userSelect:"none",display:"inline-flex",fill:"none",flexShrink:0}))),SvgIcon=inProps=>{const{children,className,classes:inClasses,sx,size,width,height,container,containerSize,containerWidth,containerHeight,title,ContainerProps,...props}=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__.Z)({props:inProps,name:"ESSvgIcon"}),classes=(ownerState=>{const{classes}=ownerState;return(0,_mui_base__WEBPACK_IMPORTED_MODULE_1__.Z)({root:["root"],svg:["svg"]},_SvgIcon_classes__WEBPACK_IMPORTED_MODULE_2__.h,classes)})({classes:inClasses,container}),svg=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(SvgIconSvg,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_5__.Z)(classes.svg,!container&&[classes.root,className]),focusable:"false",sx:container?void 0:sx,...props,style:{width:width||size,height:height||size,...props.style},children:[children,title?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title",{children:title}):null]});return container?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgIconRoot,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_5__.Z)(classes.root,className),sx,...ContainerProps,style:{width:containerWidth||containerSize||width||size,height:containerHeight||containerSize||height||size,...ContainerProps?.style},children:svg}):svg};SvgIcon.__docgenInfo={description:"Wrapper component for the svg icons.",methods:[],displayName:"SvgIcon",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/components/Alert/Alert.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Alert_stories});var Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),clsx_m=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js"),generateUtilityClasses=__webpack_require__("./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js");function getAlertUtilityClass(slot){return(0,generateUtilityClass.Z)("ESAlert",slot)}const alertClasses=(0,generateUtilityClasses.Z)("ESAlert",["root","standardSuccess","standardWarning","standardError","standardInfo","standardMonoA","icon","content","action"]);var composeClasses=__webpack_require__("./node_modules/@mui/base/composeClasses/composeClasses.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),capitalize=__webpack_require__("./node_modules/@mui/material/utils/capitalize.js"),IconCheckCircleW500=__webpack_require__("./src/icons/IconCheckCircleW500.tsx"),IconAlertW500=__webpack_require__("./src/icons/IconAlertW500.tsx"),IconErrorW500=__webpack_require__("./src/icons/IconErrorW500.tsx"),IconInformation2W500=__webpack_require__("./src/icons/IconInformation2W500.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const AlertRoot=(0,styled.ZP)("div",{name:"ESAlert",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState:{color,variant,severity}}=props;return[styles.root,styles[variant],styles[`${variant}${(0,capitalize.Z)(color||severity)}`]]}})((({ownerState:{isWithActions},theme})=>({display:"flex",borderRadius:"4px",padding:(isWithActions?"11px":"7px")+" 15px",[`&.${alertClasses.standardSuccess}`]:{backgroundColor:theme.palette.success.A100,border:`1px solid ${theme.palette.success.A200}`,color:theme.palette.success[300]},[`&.${alertClasses.standardWarning}`]:{backgroundColor:theme.palette.warning.A100,border:`1px solid ${theme.palette.warning.A200}`,color:theme.palette.warning[300]},[`&.${alertClasses.standardError}`]:{backgroundColor:theme.palette.error.A100,border:`1px solid ${theme.palette.error.A200}`,color:theme.palette.error[300]},[`&.${alertClasses.standardInfo}`]:{backgroundColor:theme.palette.info.A100,border:`1px solid ${theme.palette.info.A200}`,color:theme.palette.info[300]},[`&.${alertClasses.standardMonoA}`]:{backgroundColor:theme.palette.monoA.A50,border:`1px solid ${theme.palette.monoA.A100}`,color:theme.palette.monoA.A500}}))),AlertIcon=(0,styled.ZP)("div",{name:"ESAlert",slot:"Icon",overridesResolver:(props,styles)=>styles.icon})((()=>({paddingTop:"8px",marginRight:"8px"}))),AlertContent=(0,styled.ZP)(Typography.Z,{name:"ESAlert",slot:"Content",overridesResolver:(props,styles)=>styles.content})((()=>({wordBreak:"break-word",marginRight:"auto",minHeight:"40px",display:"flex",flexDirection:"column",justifyContent:"center"}))),AlertAction=(0,styled.ZP)("div",{name:"ESAlert",slot:"Action",overridesResolver:(props,styles)=>styles.action})((({ownerState:{isWithActions}})=>({margin:(isWithActions?"4px":"8px")+" 0 0 8px"}))),defaultIconMapping={success:(0,jsx_runtime.jsx)(IconCheckCircleW500.j,{}),warning:(0,jsx_runtime.jsx)(IconAlertW500.q,{}),error:(0,jsx_runtime.jsx)(IconErrorW500.P,{}),info:(0,jsx_runtime.jsx)(IconInformation2W500.D,{})},Alert=inProps=>{const{className,children,sx,icon,variant="standard",severity="success",action,color,iconMapping=defaultIconMapping,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESAlert"}),ownerState={...props,variant,severity,color,isWithActions:!!Array.isArray(children)&&children.some((elem=>"object"==typeof elem&&"AlertActions"===elem.type?.displayName))},classes=(ownerState=>{const{classes,color,variant,severity}=ownerState,slots={root:["root",`${variant}${(0,capitalize.Z)(color||severity)}`,`${variant}`],icon:["icon"],content:["content"],action:["action"]};return(0,composeClasses.Z)(slots,getAlertUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsxs)(AlertRoot,{className:(0,clsx_m.Z)(classes.root,className),ownerState,sx,children:[!1!==icon&&(0,jsx_runtime.jsx)(AlertIcon,{className:classes.icon,children:icon||iconMapping[severity]}),(0,jsx_runtime.jsx)(AlertContent,{className:classes.content,color:"monoA.A900",component:"div",variant:"body100",children}),!!action&&(0,jsx_runtime.jsx)(AlertAction,{className:classes.action,ownerState,children:action})]})};function getAlertCloseUtilityClass(slot){return(0,generateUtilityClass.Z)("ESAlertClose",slot)}Alert.__docgenInfo={description:"An alert displays a short, important message in a way that attracts the user's attention without interrupting the user's task.",methods:[],displayName:"Alert",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:'{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the root element if severity="success" or color="success". */\n  standardSuccess: string;\n  /** Styles applied to the root element if severity="warning" or color="warning". */\n  standardWarning: string;\n  /** Styles applied to the root element if severity="error" or color="error". */\n  standardError: string;\n  /** Styles applied to the root element if severity="info" or color="info". */\n  standardInfo: string;\n  /** Styles applied to the root element if color="monoA". */\n  standardMonoA: string;\n  /** Styles applied to the icon element. */\n  icon: string;\n  /** Styles applied to the content element. */\n  content: string;\n  /** Styles applied to the action wrapper element. */\n  action: string;\n}',signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"standardSuccess",value:{name:"string",required:!0},description:'Styles applied to the root element if severity="success" or color="success".'},{key:"standardWarning",value:{name:"string",required:!0},description:'Styles applied to the root element if severity="warning" or color="warning".'},{key:"standardError",value:{name:"string",required:!0},description:'Styles applied to the root element if severity="error" or color="error".'},{key:"standardInfo",value:{name:"string",required:!0},description:'Styles applied to the root element if severity="info" or color="info".'},{key:"standardMonoA",value:{name:"string",required:!0},description:'Styles applied to the root element if color="monoA".'},{key:"icon",value:{name:"string",required:!0},description:"Styles applied to the icon element."},{key:"content",value:{name:"string",required:!0},description:"Styles applied to the content element."},{key:"action",value:{name:"string",required:!0},description:"Styles applied to the action wrapper element."}]}}],raw:"Partial<AlertClasses>"},description:"Override or extend the styles applied to the component."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},icon:{required:!1,tsType:{name:"ReactNode"},description:"The icon displayed before the message."},variant:{required:!1,tsType:{name:"literal",value:"'standard'"},description:"The variant to use.\n@default 'standard'"},severity:{required:!1,tsType:{name:"union",raw:"'success' | 'warning' | 'error' | 'info'",elements:[{name:"literal",value:"'success'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'error'"},{name:"literal",value:"'info'"}]},description:"The severity of the alert. This defines the color and icon used.\n@default 'success'"},color:{required:!1,tsType:{name:"union",raw:"'success' | 'warning' | 'error' | 'info' | 'monoA'",elements:[{name:"literal",value:"'success'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'error'"},{name:"literal",value:"'info'"},{name:"literal",value:"'monoA'"}]},description:"The color of the component. Unless provided, the value is taken from the `severity` prop."},action:{required:!1,tsType:{name:"ReactNode"},description:"The action to display. It renders after the message, at the end of the alert."},iconMapping:{required:!1,tsType:{name:"Record",elements:[{name:"union",raw:"'info' | 'success' | 'error' | 'warning'",elements:[{name:"literal",value:"'info'"},{name:"literal",value:"'success'"},{name:"literal",value:"'error'"},{name:"literal",value:"'warning'"}]},{name:"ReactNode"}],raw:"Record<'info' | 'success' | 'error' | 'warning', ReactNode>"},description:"The component maps the severity prop to a range of different icons.\nIf you wish to change this mapping, you can provide your own."}}};(0,generateUtilityClasses.Z)("ESAlertClose",["root"]);var touchRippleClasses=__webpack_require__("./node_modules/@mui/material/ButtonBase/touchRippleClasses.js"),buttonClasses=__webpack_require__("./node_modules/@mui/material/Button/buttonClasses.js"),IconCloseW500=__webpack_require__("./src/icons/IconCloseW500.tsx"),SvgIcon_classes=__webpack_require__("./src/components/SvgIcon/SvgIcon.classes.ts");const AlertCloseRoot=(0,styled.ZP)(Button.Z,{name:"ESAlertClose",slot:"Root",overridesResolver:(props,styles)=>styles.root})((({theme})=>({[`&.${buttonClasses.Z.root}`]:{padding:"0 4px"},[`&.${buttonClasses.Z.focusVisible} .${touchRippleClasses.Z.child}`]:{borderRadius:"4px"},[`& .${SvgIcon_classes.H.root}`]:{color:theme.palette.monoA.A500}}))),AlertClose=inProps=>{const{className,sx,label,icon=IconCloseW500.H,onClick,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESAlertClose"}),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"]},getAlertCloseUtilityClass,classes)})({...props}),Icon=icon;return(0,jsx_runtime.jsx)(AlertCloseRoot,{"aria-label":label,className:(0,clsx_m.Z)(classes.root,className),color:"tertiary",size:"24",sx,onClick,children:(0,jsx_runtime.jsx)(Icon,{})})};function getAlertTitleUtilityClass(slot){return(0,generateUtilityClass.Z)("ESAlertTitle",slot)}AlertClose.__docgenInfo={description:"",methods:[],displayName:"AlertClose",props:{classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."}]}}],raw:"Partial<AlertCloseClasses>"},description:"Override or extend the styles applied to the component."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},label:{required:!1,tsType:{name:"string"},description:"Text for the button aria-label."},icon:{required:!1,tsType:{name:"ReactNode"},description:"Icon for the button."},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement, MouseEvent>",elements:[{name:"HTMLButtonElement"},{name:"MouseEvent"}]},name:"e"}],return:{name:"void"}}},description:"Callback fired when the button is clicked."}}};(0,generateUtilityClasses.Z)("ESAlertTitle",["root"]);const AlertTitleRoot=(0,styled.ZP)(Typography.Z,{name:"ESAlertTitle",slot:"Root",overridesResolver:(props,styles)=>styles.root})((()=>({}))),AlertTitle=inProps=>{const{className,children,sx,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESAlertTitle"}),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"]},getAlertTitleUtilityClass,classes)})({...props});return(0,jsx_runtime.jsx)(AlertTitleRoot,{className:(0,clsx_m.Z)(classes.root,className),color:"monoA.A900",sx,variant:"body100Bold",children})};function getAlertActionsUtilityClass(slot){return(0,generateUtilityClass.Z)("ESAlertActions",slot)}AlertTitle.__docgenInfo={description:"",methods:[],displayName:"AlertTitle",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."}]}}],raw:"Partial<AlertTitleClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."}}};(0,generateUtilityClasses.Z)("ESAlertActions",["root"]);const AlertActionsRoot=(0,styled.ZP)("div",{name:"ESAlertActions",slot:"Root",overridesResolver:(props,styles)=>styles.root})((()=>({marginTop:"6px",padding:"4px 0"}))),AlertActions=inProps=>{const{className,children,sx,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESAlertActions"}),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"]},getAlertActionsUtilityClass,classes)})({...props});return(0,jsx_runtime.jsx)(AlertActionsRoot,{className:(0,clsx_m.Z)(classes.root,className),sx,children})};AlertActions.__docgenInfo={description:"",methods:[],displayName:"AlertActions",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."}]}}],raw:"Partial<AlertActionsClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."}}};const getText=context=>"en"===context.globals.locale?"This is an alert":"Это предупреждение",getButtonText=context=>"en"===context.globals.locale?"Button":"Кнопка",getCancelButtonText=context=>"en"===context.globals.locale?"Cancel":"Отмена",Alert_stories={tags:["autodocs"],component:Alert,parameters:{references:["Alert","AlertActions","AlertClose","AlertTitle"]},argTypes:{color:{options:["success","warning","error","info","monoA"],control:{type:"select"}},severity:{options:["success","warning","error","info"],control:{type:"select"}},variant:{table:{disable:!0}},icon:{defaultValue:!0,control:{type:"boolean"}},title:{control:{type:"text"}},text:{control:{type:"text"}},action:{control:{type:"boolean"}},actions:{control:{type:"boolean"}}},args:{icon:!0,action:!1,actions:!1}},Demo={render:(args,context)=>(0,jsx_runtime.jsxs)(Alert,{action:args.action?(0,jsx_runtime.jsx)(AlertClose,{}):null,color:args.color,icon:!!args.icon&&void 0,severity:args.severity,children:[!!args.title&&(0,jsx_runtime.jsx)(AlertTitle,{children:args.title}),args.text||getText(context),!!args.actions&&(0,jsx_runtime.jsxs)(AlertActions,{children:[(0,jsx_runtime.jsx)(Button.Z,{color:"tertiary",size:"32",sx:{mr:"8px",padding:"0 8px!important",color:"monoA.A700"},variant:"contained",children:getButtonText(context)}),(0,jsx_runtime.jsx)(Button.Z,{color:"tertiary",size:"32",sx:{padding:"0 8px!important",color:"monoA.A700"},variant:"text",children:getCancelButtonText(context)})]})]})};Demo.parameters={...Demo.parameters,docs:{...Demo.parameters?.docs,source:{originalSource:'{\n  render: (args, context) => {\n    return <Alert action={args.action ? <AlertClose /> : null} color={args.color} icon={args.icon ? undefined : false} severity={args.severity}>\n        {!!args.title && <AlertTitle>{args.title}</AlertTitle>}\n        {args.text || getText(context)}\n        {!!args.actions && <AlertActions>\n            <Button color="tertiary" size="32" sx={{\n          mr: \'8px\',\n          padding: \'0 8px!important\',\n          color: \'monoA.A700\'\n        }} variant="contained">\n              {getButtonText(context)}\n            </Button>\n            <Button color="tertiary" size="32" sx={{\n          padding: \'0 8px!important\',\n          color: \'monoA.A700\'\n        }} variant="text">\n              {getCancelButtonText(context)}\n            </Button>\n          </AlertActions>}\n      </Alert>;\n  }\n}',...Demo.parameters?.docs?.source}}};const __namedExportsOrder=["Demo"]}}]);
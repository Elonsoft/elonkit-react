"use strict";(self.webpackChunk_elonkit_react=self.webpackChunk_elonkit_react||[]).push([[5386],{"./src/components/SvgIcon/SvgIcon.classes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>svgIconClasses,h:()=>getSvgIconUtilityClass});var _mui_base__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js");function getSvgIconUtilityClass(slot){return(0,_mui_base__WEBPACK_IMPORTED_MODULE_0__.Z)("ESSvgIcon",slot)}const svgIconClasses=(0,__webpack_require__("./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js").Z)("ESSvgIcon",["root","svg"])},"./src/components/SvgIcon/SvgIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>SvgIcon});var clsx__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),_SvgIcon_classes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/SvgIcon/SvgIcon.classes.ts"),_mui_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/base/composeClasses/composeClasses.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SvgIconRoot=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div",{name:"ESSvgIcon",slot:"Root",overridesResolver:(props,styles)=>styles.root})((()=>({userSelect:"none",display:"inline-flex",flexShrink:0,alignItems:"center",justifyContent:"center",overflow:"hidden"}))),SvgIconSvg=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("svg",{name:"ESSvgIcon",slot:"Svg",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.svg,!ownerState.container&&styles.root]}})((()=>({userSelect:"none",display:"inline-flex",fill:"none",flexShrink:0}))),SvgIcon=inProps=>{const{children,className,classes:inClasses,sx,size,width,height,container,containerSize,containerWidth,containerHeight,title,ContainerProps,...props}=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__.Z)({props:inProps,name:"ESSvgIcon"}),classes=(ownerState=>{const{classes}=ownerState;return(0,_mui_base__WEBPACK_IMPORTED_MODULE_1__.Z)({root:["root"],svg:["svg"]},_SvgIcon_classes__WEBPACK_IMPORTED_MODULE_2__.h,classes)})({classes:inClasses,container}),svg=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(SvgIconSvg,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_5__.Z)(classes.svg,!container&&[classes.root,className]),focusable:"false",sx:container?void 0:sx,...props,style:{width:width||size,height:height||size,...props.style},children:[children,title?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title",{children:title}):null]});return container?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgIconRoot,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_5__.Z)(classes.root,className),sx,...ContainerProps,style:{width:containerWidth||containerSize||width||size,height:containerHeight||containerSize||height||size,...ContainerProps?.style},children:svg}):svg};SvgIcon.__docgenInfo={description:"Wrapper component for the svg icons.",methods:[],displayName:"SvgIcon",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/icons/IconDotsVerticalW400.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>IconDotsVerticalW400});var _components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/SvgIcon/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconDotsVerticalW400=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.l,{size:"24px",viewBox:"0 0 24 24",...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M12 16C12.5304 16 13.0391 16.2107 13.4142 16.5858C13.7893 16.9609 14 17.4696 14 18C14 18.5304 13.7893 19.0391 13.4142 19.4142C13.0391 19.7893 12.5304 20 12 20C11.4696 20 10.9609 19.7893 10.5858 19.4142C10.2107 19.0391 10 18.5304 10 18C10 17.4696 10.2107 16.9609 10.5858 16.5858C10.9609 16.2107 11.4696 16 12 16ZM12 10C12.5304 10 13.0391 10.2107 13.4142 10.5858C13.7893 10.9609 14 11.4696 14 12C14 12.5304 13.7893 13.0391 13.4142 13.4142C13.0391 13.7893 12.5304 14 12 14C11.4696 14 10.9609 13.7893 10.5858 13.4142C10.2107 13.0391 10 12.5304 10 12C10 11.4696 10.2107 10.9609 10.5858 10.5858C10.9609 10.2107 11.4696 10 12 10ZM12 4C12.5304 4 13.0391 4.21071 13.4142 4.58579C13.7893 4.96086 14 5.46957 14 6C14 6.53043 13.7893 7.03914 13.4142 7.41421C13.0391 7.78929 12.5304 8 12 8C11.4696 8 10.9609 7.78929 10.5858 7.41421C10.2107 7.03914 10 6.53043 10 6C10 5.46957 10.2107 4.96086 10.5858 4.58579C10.9609 4.21071 11.4696 4 12 4Z",fill:"currentColor"})});IconDotsVerticalW400.__docgenInfo={description:"",methods:[],displayName:"IconDotsVerticalW400",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/icons/IconUpload.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>IconUpload});var _components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/SvgIcon/SvgIcon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconUpload=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SvgIcon__WEBPACK_IMPORTED_MODULE_1__.l,{size:"24px",viewBox:"0 0 24 24",...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M9 16V10H5L12 3L19 10H15V16H9ZM5 20V18H19V20H5Z",fill:"currentColor"})});IconUpload.__docgenInfo={description:"",methods:[],displayName:"IconUpload",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""},classes:{required:!1,tsType:{name:"Partial",elements:[{name:"signature",type:"object",raw:"{\n  /** Styles applied to the root element. */\n  root: string;\n  /** Styles applied to the svg element. */\n  svg: string;\n}",signature:{properties:[{key:"root",value:{name:"string",required:!0},description:"Styles applied to the root element."},{key:"svg",value:{name:"string",required:!0},description:"Styles applied to the svg element."}]}}],raw:"Partial<SvgIconClasses>"},description:"Override or extend the styles applied to the component."},className:{required:!1,tsType:{name:"string"},description:"Class applied to the root element."},sx:{required:!1,tsType:{name:"SxProps",elements:[{name:"Theme"}],raw:"SxProps<Theme>"},description:"The system prop that allows defining system overrides as well as additional CSS styles."},size:{required:!1,tsType:{name:"string"},description:"The width and height of the icon."},width:{required:!1,tsType:{name:"string"},description:"The width of the icon."},height:{required:!1,tsType:{name:"string"},description:"The height of the icon."},container:{required:!1,tsType:{name:"boolean"},description:"If true, allows to set the container size, without resizing the svg element itself."},containerSize:{required:!1,tsType:{name:"string"},description:"The width and height of the icon container."},containerWidth:{required:!1,tsType:{name:"string"},description:"The width of the icon container."},containerHeight:{required:!1,tsType:{name:"string"},description:"The height of the icon container."},title:{required:!1,tsType:{name:"string"},description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent"},ContainerProps:{required:!1,tsType:{name:"DetailedHTMLProps",elements:[{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},{name:"HTMLDivElement"}],raw:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},description:"Props applied to the container element."}}}},"./src/theming/components/menu/menu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,DemoList:()=>DemoList,DemoListButton:()=>DemoListButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>menu_stories});var react=__webpack_require__("../../node_modules/react/index.js"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),Divider=__webpack_require__("./node_modules/@mui/material/Divider/Divider.js"),List=__webpack_require__("./node_modules/@mui/material/List/List.js"),ListItem=__webpack_require__("./node_modules/@mui/material/ListItem/ListItem.js"),ListItemButton=__webpack_require__("./node_modules/@mui/material/ListItemButton/ListItemButton.js"),ListItemIcon=__webpack_require__("./node_modules/@mui/material/ListItemIcon/ListItemIcon.js"),ListItemText=__webpack_require__("./node_modules/@mui/material/ListItemText/ListItemText.js"),Menu=__webpack_require__("./node_modules/@mui/material/Menu/Menu.js"),clsx_m=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js");function getMenuItemUtilityClass(slot){return(0,generateUtilityClass.Z)("ESMenuItem",slot)}(0,__webpack_require__("./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js").Z)("ESMenuItem",["root"]);var composeClasses=__webpack_require__("./node_modules/@mui/base/composeClasses/composeClasses.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),MenuItem_menuItemClasses=__webpack_require__("./node_modules/@mui/material/MenuItem/menuItemClasses.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const MenuItemRoot=(0,styled.ZP)(MenuItem.Z,{name:"ESMenuItem",slot:"Root",overridesResolver:(props,styles)=>styles.root})((({theme,ownerState})=>({..."error"===ownerState.color&&{[`&.${MenuItem_menuItemClasses.Z.root}`]:{...theme.mixins.listItem({background:"transparent",color:theme.palette.error[300],icon:theme.palette.error[300],hover:theme.palette.error.A50,active:theme.palette.error.A150,focus:theme.palette.error.A75})}}}))),MenuItem_MenuItem=inProps=>{const{className,color,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESMenuItem"}),ownerState={color},classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"]},getMenuItemUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(MenuItemRoot,{className:(0,clsx_m.Z)(className,classes.root),ownerState,...props})};MenuItem_MenuItem.__docgenInfo={description:"Wrapper around MenuItem from MUI with color prop.",methods:[],displayName:"MenuItem"};var IconUpload=__webpack_require__("./src/icons/IconUpload.tsx"),IconDotsVerticalW400=__webpack_require__("./src/icons/IconDotsVerticalW400.tsx");const getButtonText=context=>"en"===context.globals.locale?"Open menu":"Открыть меню",getCutText=context=>"en"===context.globals.locale?"Cut":"Вырезать",getCopyText=context=>"en"===context.globals.locale?"Copy":"Копировать",getPasteText=context=>"en"===context.globals.locale?"Paste":"Вставить",getActionText=context=>"en"===context.globals.locale?"Action":"Действие",getErrorActionText=context=>"en"===context.globals.locale?"Dangerous action":"Опасное действие",menu_stories={title:"Overrides/Menu",parameters:{viewMode:"canvas"}},Demo={render:function Render(_args,context){const[anchorEl,setAnchorEl]=(0,react.useState)(null);return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button.Z,{variant:"contained",onClick:event=>{setAnchorEl(event.currentTarget)},children:getButtonText(context)}),(0,jsx_runtime.jsxs)(Menu.Z,{anchorEl,open:!!anchorEl,onClose:()=>{setAnchorEl(null)},children:[(0,jsx_runtime.jsxs)(MenuItem_MenuItem,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getCutText(context)})]}),(0,jsx_runtime.jsxs)(MenuItem_MenuItem,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getCopyText(context)})]}),(0,jsx_runtime.jsxs)(MenuItem_MenuItem,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getPasteText(context)})]}),(0,jsx_runtime.jsx)(Divider.Z,{}),(0,jsx_runtime.jsx)(MenuItem_MenuItem,{children:(0,jsx_runtime.jsx)(ListItemText.Z,{children:getActionText(context)})}),(0,jsx_runtime.jsx)(MenuItem_MenuItem,{children:(0,jsx_runtime.jsx)(ListItemText.Z,{inset:!0,children:getActionText(context)})}),(0,jsx_runtime.jsx)(MenuItem_MenuItem,{color:"error",children:(0,jsx_runtime.jsx)(ListItemText.Z,{children:getErrorActionText(context)})}),(0,jsx_runtime.jsxs)(MenuItem_MenuItem,{color:"error",children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getErrorActionText(context)})]})]})]})}},DemoList={render:(_args,context)=>(0,jsx_runtime.jsx)(Box.Z,{sx:theme=>({maxWidth:"360px",boxShadow:theme.palette.shadow.down[500],backgroundColor:theme.palette.surface[400],borderRadius:"4px"}),children:(0,jsx_runtime.jsxs)(List.Z,{children:[(0,jsx_runtime.jsxs)(ListItem.ZP,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getCutText(context)})]}),(0,jsx_runtime.jsxs)(ListItem.ZP,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getCopyText(context)})]}),(0,jsx_runtime.jsxs)(ListItem.ZP,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getPasteText(context)})]}),(0,jsx_runtime.jsx)(Divider.Z,{}),(0,jsx_runtime.jsxs)(ListItem.ZP,{children:[(0,jsx_runtime.jsx)(ListItemText.Z,{children:getActionText(context)}),(0,jsx_runtime.jsx)(IconButton.Z,{color:"tertiary",size:"32",children:(0,jsx_runtime.jsx)(IconDotsVerticalW400.Q,{})})]}),(0,jsx_runtime.jsx)(ListItem.ZP,{children:(0,jsx_runtime.jsx)(ListItemText.Z,{inset:!0,children:getActionText(context)})})]})})},DemoListButton={render:(_args,context)=>(0,jsx_runtime.jsx)(Box.Z,{sx:theme=>({maxWidth:"360px",boxShadow:theme.palette.shadow.down[500],backgroundColor:theme.palette.surface[400],borderRadius:"4px"}),children:(0,jsx_runtime.jsxs)(List.Z,{children:[(0,jsx_runtime.jsxs)(ListItemButton.Z,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getCutText(context)})]}),(0,jsx_runtime.jsxs)(ListItemButton.Z,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getCopyText(context)})]}),(0,jsx_runtime.jsxs)(ListItemButton.Z,{children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(IconUpload.b,{})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:getPasteText(context)})]}),(0,jsx_runtime.jsx)(Divider.Z,{}),(0,jsx_runtime.jsx)(ListItemButton.Z,{children:(0,jsx_runtime.jsx)(ListItemText.Z,{children:getActionText(context)})}),(0,jsx_runtime.jsx)(ListItemButton.Z,{children:(0,jsx_runtime.jsx)(ListItemText.Z,{inset:!0,children:getActionText(context)})})]})})};Demo.parameters={...Demo.parameters,docs:{...Demo.parameters?.docs,source:{originalSource:'{\n  render: function Render(_args, context) {\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const onClose = () => {\n      setAnchorEl(null);\n    };\n    return <div>\n        <Button variant="contained" onClick={onClick}>\n          {getButtonText(context)}\n        </Button>\n        <Menu anchorEl={anchorEl} open={!!anchorEl} onClose={onClose}>\n          <MenuItem>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getCutText(context)}</ListItemText>\n          </MenuItem>\n          <MenuItem>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getCopyText(context)}</ListItemText>\n          </MenuItem>\n          <MenuItem>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getPasteText(context)}</ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem>\n            <ListItemText>{getActionText(context)}</ListItemText>\n          </MenuItem>\n          <MenuItem>\n            <ListItemText inset>{getActionText(context)}</ListItemText>\n          </MenuItem>\n          <MenuItem color="error">\n            <ListItemText>{getErrorActionText(context)}</ListItemText>\n          </MenuItem>\n          <MenuItem color="error">\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getErrorActionText(context)}</ListItemText>\n          </MenuItem>\n        </Menu>\n      </div>;\n  }\n}',...Demo.parameters?.docs?.source}}},DemoList.parameters={...DemoList.parameters,docs:{...DemoList.parameters?.docs,source:{originalSource:"{\n  render: (_args, context) => {\n    return <Box sx={theme => ({\n      maxWidth: '360px',\n      boxShadow: theme.palette.shadow.down[500],\n      backgroundColor: theme.palette.surface[400],\n      borderRadius: '4px'\n    })}>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getCutText(context)}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getCopyText(context)}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getPasteText(context)}</ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemText>{getActionText(context)}</ListItemText>\n            <IconButton color=\"tertiary\" size=\"32\">\n              <IconDotsVerticalW400 />\n            </IconButton>\n          </ListItem>\n          <ListItem>\n            <ListItemText inset>{getActionText(context)}</ListItemText>\n          </ListItem>\n        </List>\n      </Box>;\n  }\n}",...DemoList.parameters?.docs?.source}}},DemoListButton.parameters={...DemoListButton.parameters,docs:{...DemoListButton.parameters?.docs,source:{originalSource:"{\n  render: (_args, context) => {\n    return <Box sx={theme => ({\n      maxWidth: '360px',\n      boxShadow: theme.palette.shadow.down[500],\n      backgroundColor: theme.palette.surface[400],\n      borderRadius: '4px'\n    })}>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getCutText(context)}</ListItemText>\n          </ListItemButton>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getCopyText(context)}</ListItemText>\n          </ListItemButton>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconUpload />\n            </ListItemIcon>\n            <ListItemText>{getPasteText(context)}</ListItemText>\n          </ListItemButton>\n          <Divider />\n          <ListItemButton>\n            <ListItemText>{getActionText(context)}</ListItemText>\n          </ListItemButton>\n          <ListItemButton>\n            <ListItemText inset>{getActionText(context)}</ListItemText>\n          </ListItemButton>\n        </List>\n      </Box>;\n  }\n}",...DemoListButton.parameters?.docs?.source}}};const __namedExportsOrder=["Demo","DemoList","DemoListButton"]}}]);